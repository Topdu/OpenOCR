Global:
  device: gpu
  epoch_num: 20
  log_smooth_window: 20
  print_batch_step: 10
  output_dir: ./output/rec/resnet45_base_visionlan_LA/
  eval_epoch_step: [0, 1]
  eval_batch_step: [0, 500]
  cal_metric_during_train: True
  pretrained_model:
  checkpoints:
  use_tensorboard: false
  infer_img:
  # for data or label process
  character_dict_path:
  character_type: en
  max_text_length: 25
  use_space_char: False
  save_res_path: ./output/rec/predicts_resnet45_base_visionlan_LA.txt
  grad_clip_val: 20


Optimizer:
  name: Adam
  lr: 0.0001
  weight_decay: 0.0

LRScheduler:
  name: MultiStepLR
  milestones: [6]

Architecture:
  model_type: rec
  algorithm: VisionLAN
  Transform:
  Encoder:
    name: ResNet45
    in_channels: 3
    strides: [2, 2, 2, 1, 1]
  Decoder:
    name: VisionLANDecoder
    training_step: &training_step 'LA'
    n_position: 256

Loss:
  name: VisionLANLoss
  training_step: *training_step

PostProcess:
  name: VisionLANLabelDecode

Metric:
  name: RecMetric
  main_indicator: acc

Train:
  dataset:
    name: LMDBDataSet
    data_dir: ./
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - ABINetAug:
      - VisionLANLabelEncode:
      - VisionLANResize:
          image_shape: [3, 64, 256]
      - KeepKeys:
          keep_keys: ['image', 'label', 'label_res', 'label_sub', 'label_id', 'length'] # dataloader will return list in this order
  loader:
    shuffle: True
    batch_size_per_card: 128
    drop_last: True
    num_workers: 8

Eval:
  dataset:
    name: LMDBDataSet
    data_dir: ./
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - VisionLANLabelEncode:
      - VisionLANResize:
          image_shape: [3, 64, 256]
      - KeepKeys:
          keep_keys: ['image', 'label', 'label_res', 'label_sub', 'label_id', 'length'] # dataloader will return list in this order
  loader:
    shuffle: False
    drop_last: False
    batch_size_per_card: 128
    num_workers: 2
